services:
  reverse-proxy:
    image: traefik:v2.8
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - front-tier
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    image: odoo:15
    restart: unless-stopped
    depends_on:
      - db
    env_file: .odoo_env
    networks:
      - front-tier
      - back-tier
    labels:
      - "traefik.http.routers.odoo.rule=!PathPrefix(`/adminer/`) && !Path(`/adminer`)"
      - "traefik.http.services.odoo.loadbalancer.server.port=8069"
    volumes:
      - type: bind
        source: ./
        target: /mnt/extra-addons
      - type: volume
        source: odoo-data
        target: /var/lib/odoo

  adminer:
    image: adminer
    restart: unless-stopped
    networks:
      - front-tier
    labels:
      - "traefik.http.routers.adminer.rule=PathPrefix(`/adminer/`) || Path(`/adminer`)"

  db:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    env_file: .postgres_env
    networks:
      - front-tier
      - back-tier
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data/pgdata

volumes:
  odoo-data:
  postgres-data:

networks:
  front-tier: {}
  back-tier: {}
